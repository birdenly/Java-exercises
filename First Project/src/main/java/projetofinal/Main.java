/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package projetofinal;

import projetofinal.LP2.*;
import java.util.*; 

public class Main {
        public static void main(String[] args) {
                try (Scanner sc = new Scanner(System.in)) {
                        // criação do gerente, este é único na execução do programa
                        Gerente gerente = new Gerente(2500, 1, "Integral", "Leo Stronda", "42012515675", "23/09/1983", "Rua S", "Bairro L", "278", "87190", 20000);
                        gerente.setMatricula(gerente.getMatricula());//matriculas personalizadas

                        // criação e registro inicial de três instrutores para poder executar as funcionalidades do programa
                        Instrutor instrutor = new Instrutor(1500, 2, "Integral", "Renato", "73012345675", "12/03/1978", "Rua B", "Bairro A", "180", "13489");
                        Instrutor instrutor2 = new Instrutor(1500, 0, "Noturno", "Paulo", "19082345678", "19/10/1980", "Rua C", "Bairro P", "154", "47321");
                        Instrutor instrutor3 = new Instrutor(1500, 1, "Integral", "Toguro", "21014345678", "28/01/1977", "Rua G", "Bairro J", "19", "92186");
                        gerente.contratarFuncionarios(instrutor);
                        gerente.contratarFuncionarios(instrutor2);
                        gerente.contratarFuncionarios(instrutor3);
                        instrutor.setMatricula(instrutor.getMatricula()); //matriculas personalizadas
                        instrutor2.setMatricula(instrutor2.getMatricula());
                        instrutor3.setMatricula(instrutor3.getMatricula());
                        

                        // criação e registro inicial de dois recepcionistas
                        Recepcionista recepcionista = new Recepcionista(1000, 3, "Integral", "Chris Bumstead", "17290023456", "10/06/1993", "Rua Z", "Bairro F", "2283", "21545");
                        Recepcionista recepcionista2 = new Recepcionista(1000, 0, "Noturno", "Ramon Dino", "12567890453", "14/12/1994", "Rua B", "Bairro A", "22", "10415");
                        gerente.contratarFuncionarios(recepcionista);
                        gerente.contratarFuncionarios(recepcionista2);
                        recepcionista.setMatricula(recepcionista.getMatricula());//matriculas personalizadas
                        recepcionista2.setMatricula(recepcionista2.getMatricula());


                        // criação e registro inicial de dez alunos
                        Aluno aluno1 = new Aluno("João", "12345678901", "01/01/1990", "Rua A", "Centro", "123", "123", Aluno.Plano.planoBasico, "bulking", instrutor);
                        Aluno aluno2 = new Aluno("Maria", "98765432102", "03/03/1995", "Rua C", "Bairro C", "789", "789", Aluno.Plano.planoAvancado, "cutting", instrutor2);
                        Aluno aluno3 = new Aluno("Carlos", "34567890123", "15/06/1985", "Rua E", "Bairro E", "456", "456", Aluno.Plano.planoSuper, "condicionamento", instrutor);
                        Aluno aluno4 = new Aluno("Ana", "67890123456", "25/12/1992", "Rua G", "Bairro G", "101", "101", Aluno.Plano.planoBasico, "bulking", instrutor2);
                        Aluno aluno5 = new Aluno("Lucas", "89012345678", "03/09/1988", "Rua I", "Bairro I", "121", "121", Aluno.Plano.planoAvancado, "cutting", instrutor3);
                        Aluno aluno6 = new Aluno("Isabela", "01234567890", "18/03/1997", "Rua K", "Bairro K", "141", "141", Aluno.Plano.planoBasico, "bulking", instrutor);
                        Aluno aluno7 = new Aluno("Ricardo", "12345678901", "02/05/1983", "Rua M", "Bairro M", "161", "161", Aluno.Plano.planoSuper, "condicionamento", instrutor2);
                        Aluno aluno8 = new Aluno("Camila", "23456789012", "29/07/1990", "Rua O", "Bairro O", "181", "181", Aluno.Plano.planoAvancado, "cutting", instrutor3);
                        Aluno aluno9 = new Aluno("Gustavo", "34567890123", "10/11/1981", "Rua Q", "Bairro Q", "201", "201", Aluno.Plano.planoBasico, "bulking", instrutor);
                        Aluno aluno10 = new Aluno("Laura", "45678901234", "08/07/1987", "Rua S", "Bairro S", "221", "221", Aluno.Plano.planoSuper, "condicionamento", instrutor2);
                        recepcionista.matricularAluno(aluno1);
                        recepcionista.matricularAluno(aluno2);
                        recepcionista.matricularAluno(aluno3);
                        recepcionista.matricularAluno(aluno4);
                        recepcionista.matricularAluno(aluno5);
                        recepcionista.matricularAluno(aluno6);
                        recepcionista.matricularAluno(aluno7);
                        recepcionista.matricularAluno(aluno8);
                        recepcionista.matricularAluno(aluno9);
                        recepcionista.matricularAluno(aluno10);

                        // Menu
                        System.out.println("Bem vindo ao sistema de gerenciamento de academia!");
                        // entrar como gerente, recepcionista, instrutor ou aluno
                        int opcao;

                        while (true) { // mantém o programa rodando até que o usuário escolha a opção de sair
                                //Opções de login
                                System.out.println("Digite o número correspondente a opção desejada:");
                                System.out.println("1 - Entrar como gerente");
                                System.out.println("2 - Entrar como recepcionista");
                                System.out.println("3 - Entrar como instrutor");
                                System.out.println("4 - Entrar como aluno");
                                System.out.println("0 - Sair");
                                int opcaoLogin = sc.nextInt();
                                if (opcaoLogin == 1) { // gerente
                                        while (true) { 
                                                //Ações do gerente
                                                System.out.println("Logado como gerente:");
                                                System.out.println("1 - Para contratar um funcionário");
                                                System.out.println("2 - Para demitir um funcionário");
                                                System.out.println("3 - Para listar alunos");
                                                System.out.println("4 - Para listar instrutores");
                                                System.out.println("5 - Para listar recepcionistas");
                                                System.out.println("6 - Para listar todos os funcionários");
                                                System.out.println("7 - Para comprar um aparelho");
                                                System.out.println("8 - Sair");
                                                opcao = sc.nextInt();

                                                if (opcao == 1) { // contratar funcionário
                                                        System.out.println("Digite sua funçâo:");
                                                        String funcaoFuncionario = sc.next();
                                                        System.out.println("Digite o nome do instrutor:");
                                                        String nomeFuncionario = sc.next();
                                                        System.out.println("Digite o CPF do instrutor:");
                                                        String cpfFuncionario = sc.next();
                                                        System.out.println("Digite a data de nascimento do instrutor:");
                                                        String dataNascimentoFuncionario = sc.next();
                                                        System.out.println("Digite o rua do instrutor:");
                                                        String enderecoFuncionario = sc.next();
                                                        System.out.println("Digite o bairro do instrutor:");
                                                        String bairroFuncionario = sc.next();
                                                        System.out.println("Digite o número do endereço do instrutor:");
                                                        String numeroFuncionario = sc.next();
                                                        System.out.println("Digite a matrícula do instrutor:");
                                                        String matriculaFuncionario = sc.next();
                                                        System.out.println("Digite o salário do instrutor:");
                                                        float salario = sc.nextFloat();
                                                        System.out.println("Digite o número de faltas do instrutor:");
                                                        int faltas = sc.nextInt();
                                                        System.out.println("Digite o turno do instrutor:");
                                                        String turno = sc.next();
                                                        if(funcaoFuncionario.equals("instrutor")){

                                                                Instrutor instrutor4 = new Instrutor(salario, faltas, turno, nomeFuncionario, cpfFuncionario, dataNascimentoFuncionario, enderecoFuncionario, bairroFuncionario, numeroFuncionario, matriculaFuncionario);
                                                                System.out.println("Instrutor cadastrado com sucesso!");
                                                                gerente.contratarFuncionarios(instrutor4);
                                                                instrutor4.setMatricula(instrutor4.getMatricula());
                                                        }else{
                                                                Recepcionista recepcionista3 = new Recepcionista(salario, faltas, turno, nomeFuncionario, cpfFuncionario, dataNascimentoFuncionario, enderecoFuncionario, bairroFuncionario, numeroFuncionario, matriculaFuncionario);
                                                                System.out.println("Recepcionista cadastrado com sucesso!");
                                                                gerente.contratarFuncionarios(recepcionista3);
                                                                recepcionista3.setMatricula(recepcionista3.getMatricula());
                                                        }
                                                        
                                                }
                                                else if (opcao == 2){ //Demissao de funcionario
                                                        System.out.println("Digite a função do funcionario:");
                                                        String funcao = sc.next();
                                                        System.out.println("Digite o CPF do funcionario para sua demissão:");
                                                        String cpfDemissao = sc.next();

                                                        if(funcao.equals("instrutor")){

                                                                for (Instrutor instrutorr : gerente.InstrutoresVinculados) {
                                                                        if (instrutorr.getCpf().equals(cpfDemissao)) {
                                                                                gerente.demitirFuncionarios(instrutorr);
                                                                                break;
                                                                        }
                                                                System.out.println("Funcionario não existe.");
                                                        }
                                                        }else{
                                                                for (Recepcionista recepcionistaa : gerente.RecepcionistasVinculados) { 
                                                                        if (recepcionistaa.getCpf().equals(cpfDemissao)) {
                                                                                gerente.demitirFuncionarios(recepcionistaa);
                                                                                break;
                                                                        }
                                                                System.out.println("Funcionario não existe.");
                                                        }
                                                        }
                                                }
                                                else if (opcao == 3){ // imprimir alunos matriculados na academia
                                                        recepcionista.imprimirAlunos();
                                                }
                                                else if (opcao == 4){ // imprimir instrutores da academia
                                                        gerente.imprimirInstrutores();
                                                }
                                                else if (opcao == 5){ // imprimir recepcionistas da academia
                                                        gerente.imprimirRecepcionistas();
                                                }
                                                else if (opcao == 6){ // imprimir todos os funcionarios da academia
                                                        gerente.imprimirTodosFuncionarios();
                                                }
                                                else if (opcao == 7){ // Comprar aparelho
                                                        System.out.println("Este é seu balanço:" + gerente.getTetoDeGastos());
                                                        System.out.println("Digite o preço do aparelho a ser comprado:");
                                                        float preco = sc.nextFloat();
                                                        gerente.comprarAparelho(preco);
                                                }
                                                else if (opcao == 8){ // volta para o menu anterior
                                                        break;
                                                }
                                                else{
                                                        System.out.println("Operação inválida!");
                                                }
                                        }
                                }
                                else if (opcaoLogin == 2){ // recepcionista
                                        while (true){
                                                //Ações do recepcionista
                                                System.out.println("Logado como recepcionista:");
                                                System.out.println("1 - Para cadastrar aluno");
                                                System.out.println("2 - Para listar alunos");
                                                System.out.println("3 - Para cancelar matrícula");
                                                System.out.println("4 - Para buscar aluno");
                                                System.out.println("5 - Para listar planos");
                                                System.out.println("6 - Sair");
                                                int opcao2 = sc.nextInt();

                                                if (opcao2 == 1) { //cadastrar aluno
                                                        try {
                                                                System.out.println("Digite o nome do aluno:");
                                                                String nome = sc.next();
                                                                System.out.println("Digite o CPF do aluno:");
                                                                String cpf = sc.next();
                                                                System.out.println("Digite a data de nascimento do aluno:");
                                                                String dataNascimento = sc.next();
                                                                System.out.println("Digite o rua do aluno:");
                                                                String endereco = sc.next();
                                                                System.out.println("Digite o bairro do aluno:");
                                                                String bairro = sc.next();
                                                                System.out.println("Digite o número do endereço do aluno:");
                                                                String numero = sc.next();
                                                                System.out.println("Digite a matrícula do aluno:");
                                                                String matricula = sc.next();
                                                                recepcionista.listaPlanos();
                                                                System.out.println("Digite o plano do aluno:");
                                                                int plano = sc.nextInt();
                                                                System.out.println("Digite o objetivo do aluno:");
                                                                String objetivo = sc.next();
                                                                gerente.imprimirInstrutores();
                                                                System.out.println("Digite o nome do instrutor do aluno:");
                                                                String nomeInstrutor = sc.next();
                                                                Instrutor novoInstrutor = null;

                                                        for (Instrutor instrutorr : gerente.InstrutoresVinculados) { //achar/verificar o instrutor
                                                                boolean encontrouInstrutor = false;
                                                                if (instrutorr.getNome().trim().equalsIgnoreCase(nomeInstrutor.trim())) {
                                                                        novoInstrutor = instrutorr;
                                                                        encontrouInstrutor = true;
                                                                        break;
                                                                }
                                                                if (!encontrouInstrutor){
                                                                        System.out.println("Instrutor não existe.");
                                                                }
                                                        }

                                                        Aluno aluno = new Aluno(nome, cpf, dataNascimento, endereco, bairro, numero, matricula, Aluno.Plano.values()[plano-1], objetivo, novoInstrutor);
                                                        System.out.println("Aluno cadastrado com sucesso!");
                                                        recepcionista.matricularAluno(aluno);
                                                        }
                                                        catch (Exception e) {
                                                                System.err.println(("Erro: " + e.getMessage()));
                                                        }
                                                }
                                                else if (opcao2 == 2) { // imprimir alunos matriculados na academia
                                                                recepcionista.imprimirAlunos();
                                                }
                                                else if (opcao2 == 3) { // Remover/desmatricular aluno
                                                        System.out.println("Digite o CPF do aluno:");
                                                        String cpfCancelar = sc.next();
                                                        if (recepcionista.buscarAluno(cpfCancelar)) {
                                                                recepcionista.cancelarMatricula(cpfCancelar);
                                                                break;
                                                        }
                                                        System.out.println("Aluno não encontrado."); 
                                                }
                                                else if (opcao2 == 4) { //Procurar aluno
                                                        System.out.println("Digite o CPF do aluno:");
                                                        String cpfAchar = sc.next();
                                                        if (recepcionista.buscarAluno(cpfAchar)) {
                                                                System.out.println("Aluno foi encontrado na base de dados.");
                                                                break;
                                                        }
                                                        System.out.println("Aluno não encontrado.");                      
                                                }
                                                else if (opcao2 == 5) { //listar alunos
                                                        recepcionista.listaPlanos();
                                                }
                                                else if (opcao2 == 6) { // volta para o menu anterior
                                                        break;
                                                }
                                                else {
                                                        System.out.println("Operação inválida!");
                                                }
                                        }
                                }                
                                else if (opcaoLogin == 3){ // instrutor
                                        System.out.println("Digite seu CPF ou Matricula:");
                                        String cpfInstrutor = sc.next();
                                        while (true){
                                                boolean encontrouInstrutor = false;
                                                Instrutor instrutorAtual = null;
                                                for (Instrutor InstrutoresVinculados : gerente.InstrutoresVinculados) {
                                                        if (InstrutoresVinculados.getCpf().equals(cpfInstrutor) || InstrutoresVinculados.getMatricula().equals(cpfInstrutor)) {
                                                                instrutorAtual = InstrutoresVinculados;
                                                                encontrouInstrutor = true;
                                                                break;
                                                        }
                                                }
                                                if (!encontrouInstrutor) {
                                                        System.out.println("CPF ou Matrícula não encontrada.");
                                                        break;
                                                }
                                                System.out.println("Logado como instrutor:");
                                                System.out.println("1 - Para listar alunos vinculados ao instrutor");
                                                System.out.println("2 - Para vincular aluno");
                                                System.out.println("3 - Para desvincular aluno");
                                                System.out.println("4 - Sair");
                                                int opcao3 = sc.nextInt();

                                                if (opcao3 == 1){ //Imprimir alunos vinculados ao instrutor
                                                        instrutorAtual.imprimirAlunos();         
                                                }
                                                else if (opcao3 == 2){ // Vincular aluno
                                                        System.out.println("Digite CPF ou Matricula do aluno:");
                                                        String cpfVincular = sc.next();
                                                        if (recepcionista.buscarAluno(cpfVincular)){
                                                                instrutorAtual.vincularAluno(recepcionista.retornaAluno(cpfVincular));
                                                                System.out.println("Aluno vinculado");
                                                        }
                                                        else {
                                                                System.out.println("Aluno não encontrado");
                                                        }
                                                }
                                                else if (opcao3 == 3){ // Desvincular aluno de instrutor
                                                        System.out.println("Digite CPF do aluno:");
                                                        String cpfVincular = sc.next();
                                                        if (recepcionista.buscarAluno(cpfVincular)){
                                                                instrutorAtual.desvincularAluno(recepcionista.retornaAluno(cpfVincular));
                                                                System.out.println("Aluno desvinculado");
                                                        }
                                                        else {
                                                                System.out.println("Aluno não encontrado");
                                                        }
                                                }
                                                else if (opcao3 == 4){ // volta para o menu anterior
                                                        break;
                                                }
                                                else{
                                                        System.out.println("Operação inválida!");
                                                }
                                        }
                                }
                                else if (opcaoLogin == 4){ // aluno 
                                        System.out.println("Digite seu CPF:");
                                        String cpfAluno = sc.next();
                                        while (true){
                                                Aluno alunoAtual = null;
                                                if (recepcionista.buscarAluno(cpfAluno)){
                                                        alunoAtual = recepcionista.retornaAluno(cpfAluno);
                                                }
                                                else{
                                                        System.out.println("Aluno não econtrado");
                                                        break;
                                                }
                                                System.out.println("Logado como aluno:");
                                                System.out.println("1 - Para listar instruções do treino");
                                                System.out.println("2 - Para mostrar nome do instrutor responsável");
                                                System.out.println("3 - Sair");
                                                int opcao4 = sc.nextInt();

                                                if (opcao4 == 1){ //Mostar objetivo definido pelos instrutores
                                                        Instrutor.tipoTreino(alunoAtual.getObjetivo());
                                                }
                                                else if (opcao4 == 2){ // Nome do instrutor responsavel
                                                        System.out.println(alunoAtual.getInstrutor());
                                                }
                                                else if (opcao4 == 3){ // volta para o menu anterior
                                                        break;
                                                }
                                                else{
                                                        System.out.println("Operação inválida");
                                                }
                                        }
                                }
                                else if (opcaoLogin == 0) {
                                        System.out.println("Programa finalizado.");
                                        break;
                                }
                                else {
                                        System.out.println("Operação inválida!");
                                }
                        }
                }        
        }
}
